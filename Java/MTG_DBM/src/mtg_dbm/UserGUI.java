/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mtg_dbm;

import java.awt.Component;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.net.URL;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author reticent
 */
public class UserGUI extends javax.swing.JFrame {

    /**
     * Creates new form UserGUI
     */
    public UserGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        txtCardName = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        lblPicture = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCardResult = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        tblCardResult.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "CardID", "Card Name", "Set Name", "Mana", "CMC", "Type", "Power", "Toughness", "Artist", "MultiverseID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCardResult.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblCardResult.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCardResultMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblCardResult);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtCardName, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSearch))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 908, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblPicture, javax.swing.GroupLayout.DEFAULT_SIZE, 391, Short.MAX_VALUE)))
                .addGap(41, 41, 41))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCardName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 709, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblPicture, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(285, 285, 285)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Search Card", jPanel1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1358, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 814, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Deck", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        //Create Variables
        String searchCard = txtCardName.getText();  //Card Being Searched
        Connection connect = null;
        Statement statement = null;
        PreparedStatement preparedStatement = null;
        ResultSet resultSet = null;
        
        try 
        {
            connect = DriverManager.getConnection("jdbc:mysql://localhost/mtg_dbm?" 
                                                + "user=root&password=q1w2e3r4");
            statement = connect.createStatement();
            
            if (searchCard.equals("")) //Blank search pulls all cards in database
            {
                // Result set get the result of the SQL query
                resultSet = statement.executeQuery("select * from mtg_dbm.Card");

                 //Instanced Variables
                DefaultTableModel tbl = (DefaultTableModel)tblCardResult.getModel();

                tbl.setRowCount(0); //Set Table Row Count = 0


                while (resultSet.next())
                {
                    int CardID = resultSet.getInt("ID");
                    String CardName = resultSet.getString("CardName");
                    String SetName = resultSet.getString("SetName");
                    String Mana = resultSet.getString("ManaCost");
                    float CMC = resultSet.getFloat("CMC");
                    String Type = resultSet.getString("CardType");
                    String Power = resultSet.getString("Power");
                    String Toughness = resultSet.getString(("Toughness"));
                    String Artist = resultSet.getString("Artist");
                    int MultiverseID = resultSet.getInt("MultiverseID");
                    Object [] arr = {CardID, CardName, SetName, Mana, CMC, Type,
                                     Power, Toughness, Artist, MultiverseID};
                    tbl.addRow(arr);
                    //System.out.println(CardName +":" +ID +"\n");
                }
                
                tblCardResult.setModel(tbl);
                resizeColumnWidth(tblCardResult);
                
            }
            else if (searchCard.isEmpty() == false) //If User inputs anything in the search
            {
                preparedStatement = connect.prepareStatement("select * from mtg_dbm.Card where CardName like ?");
                preparedStatement.setString(1, "%" + searchCard + "%");
                resultSet = preparedStatement.executeQuery();
                
                 //Instanced Variables
                DefaultTableModel tbl = (DefaultTableModel)tblCardResult.getModel();

                tbl.setRowCount(0); //Set Table Row Count = 0


                while (resultSet.next())
                {
                    int CardID = resultSet.getInt("ID");
                    String CardName = resultSet.getString("CardName");
                    String SetName = resultSet.getString("SetName");
                    String Mana = resultSet.getString("ManaCost");
                    float CMC = resultSet.getFloat("CMC");
                    String Type = resultSet.getString("CardType");
                    String Power = resultSet.getString("Power");
                    String Toughness = resultSet.getString(("Toughness"));
                    String Artist = resultSet.getString("Artist");
                    int MultiverseID = resultSet.getInt("MultiverseID");
                    Object [] arr = {CardID, CardName, SetName, Mana, CMC, Type,
                                     Power, Toughness, Artist, MultiverseID};
                    tbl.addRow(arr);
                    //System.out.println(CardName +":" +ID +"\n");
                }
                
                tblCardResult.setModel(tbl);
                resizeColumnWidth(tblCardResult);
            }
            
            //Displaying Images on JLabels
            URL url = new URL("http://gatherer.wizards.com/Handlers/Image.ashx?multiverseid=99595959&type=card");
            BufferedImage img = ImageIO.read(url);
            ImageIcon i = new ImageIcon(img);
//            System.out.println("X: " + lblPictureTest.getLocation().x +
//                               "\nY: " + lblPictureTest.getLocation().y +
//                               "\nDimensions of Picture: (" + img.getHeight()+","+img.getWidth()+")"+
//                                "\nDimensions of Label: (" + lblPictureTest.getHeight()+","+lblPictureTest.getWidth()+")");
//            lblPictureTest.setBounds(539, 253, img.getWidth(), img.getHeight());
//            lblPictureTest.setSize();
            
            lblPicture.setIcon(i);
        }
        catch(Exception e)
        {
            System.out.println("Error");
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void tblCardResultMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCardResultMouseClicked
        JTable tbl = (JTable)evt.getSource();
        
        Object temp = tbl.getValueAt(tbl.getSelectedRow(), 9);
        if (temp != null)
        {
            int x = (int)temp;
        
        try
        {
            //Displaying Images on JLabels
            URL url = new URL("http://gatherer.wizards.com/Handlers/Image.ashx?multiverseid=" + x +"&type=card");
            BufferedImage img = ImageIO.read(url);
            ImageIcon i = new ImageIcon(img);
            
            lblPicture.setSize(i.getIconWidth(), i.getIconHeight());
            lblPicture.repaint();
            lblPicture.setIcon(i);
            
        }
        catch(Exception e)
        {
            System.out.println("Error with pulling image...");
        }
        }
    }//GEN-LAST:event_tblCardResultMouseClicked

    //**************************************************************************
    // Resizes JTable Columns based on the information within the column
    //**************************************************************************
    public void resizeColumnWidth(JTable table) 
    {
        final TableColumnModel columnModel = table.getColumnModel();
        
        for (int column = 0; column < table.getColumnCount(); column++) {
            
            int width = 15; // Min width
            
            for (int row = 0; row < table.getRowCount(); row++) 
            {
                TableCellRenderer renderer = table.getCellRenderer(row, column);
                Component comp = table.prepareRenderer(renderer, row, column);
                width = Math.max(comp.getPreferredSize().width +1 , width);
            }
                if(width > 300)
                    width=300;
                else if (width < 300 && width >=200)
                    width = 250;
                else if (width < 200)
                    width = 150;
                     
                columnModel.getColumn(column).setPreferredWidth(width);
        }   
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearch;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblPicture;
    private javax.swing.JTable tblCardResult;
    private javax.swing.JTextField txtCardName;
    // End of variables declaration//GEN-END:variables
}
